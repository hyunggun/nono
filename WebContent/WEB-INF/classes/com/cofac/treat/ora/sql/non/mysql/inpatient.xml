<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN"
    "http://www.ibatis.com/dtd/sql-map-2.dtd">
<sqlMap namespace="patient">
  <typeAlias alias="hashmap" type="java.util.HashMap" />

	<resultMap id="patientMap" class="java.util.HashMap">
       <result column="inprm_id" property="inprm_id" javaType="java.lang.Integer"/>
       <result column="inprm_nm" property="inprm_nm" javaType="java.lang.String"/>
       <result column="emr_room_key" property="emr_room_key" javaType="java.lang.String"/>
       <result column="max_cnt" property="max_cnt" javaType="java.lang.Integer"/>
       <result column="nurse_id" property="nurse_id" javaType="java.lang.Integer"/>
       <result column="use_fg" property="use_fg" javaType="java.lang.String"/>
       <result column="createdAt" property="createdAt" javaType="java.lang.String"/>
       <result column="updatedAt" property="updatedAt" javaType="java.lang.String"/>
       <result column="nurse_nm" property="nurse_nm" javaType="java.lang.String"/>
  </resultMap>

  <resultMap id="fileMap" class="java.util.HashMap">
       <result column="file_id" property="file_id" javaType="java.lang.Integer"/>
       <result column="file_nm" property="file_nm" javaType="java.lang.String"/>
       <result column="file_grp" property="file_grp" javaType="java.lang.Integer"/>
       <result column="file_path" property="file_path" javaType="java.lang.String"/>
       <result column="file_url" property="file_url" javaType="java.lang.String"/>
       <result column="file_size" property="file_size" javaType="java.lang.String"/>
       <result column="file_type" property="file_type" javaType="java.lang.String"/>
       <result column="file_position" property="file_position" javaType="java.lang.String"/>
       <result column="createdAt" property="createdAt" javaType="java.lang.String"/>
       <result column="updatedAt" property="updatedAt" javaType="java.lang.String"/>

       <result column="inprm_id" property="inprm_id" javaType="java.lang.Integer"/>
       <result column="inprm_nm" property="inprm_nm" javaType="java.lang.String"/>
       <result column="emr_room_key" property="emr_room_key" javaType="java.lang.String"/>
       <result column="max_cnt" property="max_cnt" javaType="java.lang.Integer"/>
       <result column="use_type" property="use_type" javaType="java.lang.String"/>
  </resultMap>

  <resultMap id="noticeMap" class="java.util.HashMap">
       <result column="content" property="content" javaType="java.lang.String"/>
       <result column="writer_nm" property="writer_nm" javaType="java.lang.String"/>
       <result column="notice_id" property="notice_id" javaType="java.lang.Integer"/>
       <result column="inprm_id" property="inprm_id" javaType="java.lang.Integer"/>
       <result column="inprm_nm" property="inprm_nm" javaType="java.lang.String"/>
  </resultMap>

  <!-- tb_patient -->
  <statement id="create_tb_inpat_room">
CREATE TABLE `tb_inpat_room` (
  `inprm_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `inprm_nm` varchar(120) DEFAULT NULL,
  `emr_room_key` varchar(12) DEFAULT NULL,
  `max_cnt` int(11) DEFAULT '4',
  `nurse_id` int(11) DEFAULT '0',
  `nurse_nm` varchar(120) DEFAULT NULL,
  `use_fg` enum('Y','N') DEFAULT 'Y',
  `createdAt` datetime DEFAULT NULL,
  `updatedAt` datetime DEFAULT NULL,
  PRIMARY KEY (`inprm_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COMMENT='입원실';
  </statement>

  <sql id="wherePatientRoom">
    <dynamic prepend="WHERE">
      <isNotEmpty property="emr_room_key" prepend="AND">
           iprm.emr_room_key = #emr_room_key#
      </isNotEmpty>
      <isNotEmpty property="nurse_id" prepend="AND">
           iprm.nurse_id = #nurse_id#
      </isNotEmpty>
      <isNotEmpty property="s_inprm_nm" prepend="AND">
           iprm.inprm_nm LIKE ('%' || #s_inprm_nm# || '%')
      </isNotEmpty>
      <isNotEmpty property="skipResults">
	     		 rownums >= #skipResults#
	    </isNotEmpty>
    </dynamic>
  </sql>

  <select id="selectPatientRoomCount" resultClass="int" parameterClass="hashmap">
    SELECT count(1)
      FROM tb_inpat_room iprm
    <include refid="wherePatientRoom"/>
  </select>

  <select id="selectPatientRoomList" resultMap="patientMap" parameterClass="hashmap">
    SELECT iprm.*
      FROM (
           SELECT iprm.*
                  ,usr.user_nm as nurse_nm
             FROM tb_inpat_room iprm
             LEFT JOIN tb_user usr
               ON usr.user_id = iprm.nurse_id
    <include refid="wherePatientRoom"/>
         ORDER BY iprm.createdAt
           ) iprm
    <isNotEmpty property="maxResults">
     WHERE rownums &lt;= #maxResults#
    </isNotEmpty>
  </select>

  <select id="selectPatientRoom" resultMap="patientMap" parameterClass="hashmap">
           SELECT iprm.*
                  ,usr.user_nm as nurse_nm
             FROM tb_inpat_room iprm
             LEFT JOIN tb_user usr
               ON usr.user_id = iprm.nurse_id
    <dynamic prepend="WHERE">
      <isNotEmpty property="emr_room_key" prepend="AND">
           iprm.emr_room_key = #emr_room_key#
      </isNotEmpty>
      <isNotEmpty property="inprm_id" prepend="AND">
           iprm.inprm_id = #inprm_id#
      </isNotEmpty>
    </dynamic>
  </select>

  <insert id="insertPatientRoom" parameterClass="hashmap">
    INSERT INTO tb_inpat_room (
               inprm_nm
               ,emr_room_key
               ,max_cnt
               ,nurse_id
               ,createdAt
               ,updatedAt
              ) values (
               #inprm_nm#
               ,#emr_room_key#
               ,#max_cnt#
               ,#nurse_id#
               ,now()
               ,now()
              )
  </insert>

  <update id="updatePatientRoom" parameterClass="hashmap">
    UPDATE tb_inpat_room SET
           updatedAt = now()
    <isNotNull property="inprm_nm">
          ,inprm_nm = #inprm_nm#
    </isNotNull>
    <isNotNull property="emr_room_key">
          ,emr_room_key = #emr_room_key#
    </isNotNull>
    <isNotNull property="max_cnt">
          ,max_cnt = #max_cnt#
    </isNotNull>
    <isNotNull property="nurse_id">
          ,nurse_id = #nurse_id#
    </isNotNull>
     WHERE inprm_id = #inprm_id#
  </update>

  <delete id="deletePatientRoom" parameterClass="hashmap">
    DELETE
      FROM tb_inpat_room
     WHERE inprm_id = #inprm_id#
  </delete>


  <!-- tb_inpat_room_file -->
  <statement id="create_tb_inpat_room_file">
CREATE TABLE `tb_inpat_room_file` (
  `file_id` int(11) NOT NULL,
  `inprm_id` int(11) DEFAULT NULL,
  `use_type` enum('T','B','N') DEFAULT 'T',
  `createdAt` datetime DEFAULT NULL,
  PRIMARY KEY (`file_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;
  </statement>

  <sql id="wherePatientFile">
    <dynamic prepend="WHERE">
      <isNotEmpty property="inprm_id" prepend="AND">
           infl.inprm_id = #inprm_id#
      </isNotEmpty>
      <isNotEmpty property="file_id" prepend="AND">
           infl.file_id = #file_id#
      </isNotEmpty>
      <isNotEmpty property="emr_room_key" prepend="AND">
           iprm.emr_room_key = #emr_room_key#
      </isNotEmpty>
      <isNotEmpty property="use_type" prepend="AND">
           infl.use_type = #use_type#
      </isNotEmpty>
    </dynamic>
  </sql>

  <select id="selectPatientFileCount" resultClass="int" parameterClass="hashmap">
    SELECT count(1)
      FROM tb_inpat_room_file infl
      JOIN tb_inpat_room iprm
        ON iprm.inprm_id = infl.inprm_id
      JOIN tb_file file
        ON file.file_id = infl.file_id
    <include refid="wherePatientFile"/>
  </select>

  <select id="selectPatientFileList" resultMap="fileMap" parameterClass="hashmap">
    /* selectPatientFileList */
    SELECT infl.*
      FROM (
           SELECT file.*
                  ,infl.inprm_id
                  ,infl.use_type
                  ,iprm.inprm_nm
                  ,iprm.emr_room_key
                  ,iprm.max_cnt
             FROM tb_inpat_room_file infl
             JOIN tb_inpat_room iprm
               ON iprm.inprm_id = infl.inprm_id
             JOIN tb_file file
               ON file.file_id = infl.file_id
    <include refid="wherePatientFile"/>
         ORDER BY infl.createdAt
           ) infl
  </select>

  <insert id="insertPatientFile" parameterClass="hashmap">
    INSERT INTO tb_inpat_room_file (
                file_id
               ,inprm_id
               ,use_type
               ,createdAt
              ) values (
                #file_id#
               ,#inprm_id#
               ,#use_type#
               ,now()
              )
  </insert>

  <delete id="deletePatientFile" parameterClass="hashmap">
    DELETE
      FROM tb_inpat_room_file
     WHERE file_id = #file_id#
    <isNotEmpty property="inprm_id" prepend="AND">
           inprm_id = #inprm_id#
    </isNotEmpty>
    <isNotEmpty property="use_type" prepend="AND">
           use_type = #use_type#
    </isNotEmpty>
  </delete>


  <!-- tb_inpat_notice -->
  <statement id="create_tb_inpat_notice">
CREATE TABLE `tb_inpat_notice` (
  `notice_id` int(11) NOT NULL,
  `inprm_id` int(11) DEFAULT '0' COMMENT 'case when 0 then all',
  `createdAt` datetime DEFAULT NULL,
  PRIMARY KEY (`notice_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;
  </statement>

  <sql id="wherePatientNotice">
    <dynamic prepend="WHERE">
      <isNotEmpty property="inprm_id" prepend="AND">
           ipnt.inprm_id = #inprm_id#
      </isNotEmpty>
      <isNotEmpty property="emr_room_key" prepend="AND">
           iprm.emr_room_key = #emr_room_key#
      </isNotEmpty>
      <isNotEmpty property="s_content" prepend="AND">
           ntc.content LIKE ('%' || #s_content# || '%')
      </isNotEmpty>

		<isNotEmpty property="search_text">
			<isEqual property="search_type" compareValue="W" prepend="AND">
           usr.user_nm LIKE ('%' || #search_text# || '%')
			</isEqual>
			<isEqual property="search_type" compareValue="C" prepend="AND">
           ntc.content LIKE ('%' || #search_text# || '%')
			</isEqual>
		</isNotEmpty>
    </dynamic>
  </sql>

  <select id="selectPatientNoticeCount" resultClass="int" parameterClass="hashmap">
    SELECT count(1)
      FROM tb_inpat_notice ipnt
      JOIN tb_inpat_room iprm
        ON iprm.inprm_id = ipnt.inprm_id
      JOIN tb_notice ntc
        ON ntc.notice_id = ipnt.notice_id
      JOIN tb_user usr
        ON usr.user_id = ntc.writer_id
    <include refid="wherePatientNotice"/>
  </select>

  <select id="selectPatientNoticeList" resultMap="noticeMap" parameterClass="hashmap">
    SELECT ipnt.*
      FROM (
           SELECT ntc.content
                 ,usr.user_nm as writer_nm
                 ,ipnt.notice_id
                 ,ipnt.inprm_id
                 ,iprm.inprm_nm
             FROM tb_inpat_notice ipnt
             JOIN tb_inpat_room iprm
               ON iprm.inprm_id = ipnt.inprm_id
             JOIN tb_notice ntc
               ON ntc.notice_id = ipnt.notice_id
             JOIN tb_user usr
               ON usr.user_id = ntc.writer_id
    <include refid="wherePatientNotice"/>
         ORDER BY ntc.createdAt
           ) ipnt
  </select>

  <insert id="insertPatientNotice" parameterClass="hashmap">
    INSERT INTO tb_inpat_notice (
                notice_id
               ,inprm_id
               ,createdAt
              ) values (
                #notice_id#
               ,#inprm_id#
               ,now()
              )
  </insert>

  <delete id="deletePatientNotice" parameterClass="hashmap">
    DELETE
      FROM tb_inpat_notice
     WHERE notice_id = #notice_id#
      <isNotEmpty property="inprm_id" prepend="AND">
           inprm_id = #inprm_id#
      </isNotEmpty>
  </delete>

  <resultMap id="bedposMap" class="java.util.HashMap">
       <result column="bedpos_id" property="bedpos_id" javaType="java.lang.String"/>
       <result column="room_no" property="room_no" javaType="java.lang.String"/>
       <result column="bedpos" property="bedpos" javaType="java.lang.Integer"/>
       <result column="chart_no" property="chart_no" javaType="java.lang.String"/>
  </resultMap>
  <!-- tb_inpat_notice -->
  <statement id="create_tb_inpat_notice">
	CREATE TABLE `tb_bedpos` (
	  `bedpos_id` int NOT NULL AUTO_INCREMENT,
	  `room_no` varchar(10) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
	  `bedpos` int NOT NULL,
	  `chart_no` varchar(10) NOT NULL,
	  PRIMARY KEY (`bedpos_id`)
	) ENGINE=InnoDB DEFAULT CHARSET=utf8;
  </statement>
  
 <select id="selectBedpos" resultMap="noticeMap" parameterClass="hashmap">
    SELECT bedpos
	  FROM totalview.tb_bedpos
	 WHERE room_no = #roomNo#
	   AND chart_no = #chartNo#
  </select>

  <insert id="upsertBedpos" parameterClass="hashmap">
    insert into totalview.tb_bedpos (
    	room_no
      , bedpos
      , chart_no
    ) values(
		#room_no#
	  , #bedpos#
	  , #chart_no#
	)ON DUPLICATE KEY UPDATE
	  bedpos = #bedpos#
  </insert> 
  
</sqlMap>

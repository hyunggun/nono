<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN"
    "http://www.ibatis.com/dtd/sql-map-2.dtd">
<sqlMap namespace="treat">
  <typeAlias alias="hashmap" type="java.util.HashMap" />
  
  <resultMap id="treatMap" class="java.util.HashMap">
       <result column="treatment_id" property="treatment_id" javaType="java.lang.Integer"/>
       <result column="patient_id" property="patient_id" javaType="java.lang.Integer"/>
       <result column="room_id" property="room_id" javaType="java.lang.Integer"/>
       <result column="doctor_id" property="doctor_id" javaType="java.lang.Integer"/>
       <result column="reg_user_id" property="reg_user_id" javaType="java.lang.Integer"/>
       <result column="status" property="status" javaType="java.lang.String"/>
       <result column="rank" property="rank" javaType="java.lang.String"/>
       <result column="createdAt" property="createdAt" javaType="java.lang.String"/>
       <result column="updatedAt" property="updatedAt" javaType="java.lang.String"/>
  </resultMap>

  <!-- tb_treat -->
  <statement id="create_treat">
		CREATE TABLE `tb_treatment` (
		  `treatment_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
		  `patient_id` int(11) DEFAULT '0',
		  `room_id` int(11) DEFAULT '0',
		  `doctor_id` int(11) DEFAULT '0',
		  `reg_user_id` int(11) DEFAULT '0',
		  `status` enum('R','T','H','F','S') DEFAULT 'S' COMMENT 'Reservation, Treatment, Hold, Finish, Standby',
		  `rank` varchar(120) DEFAULT NULL,
		  `createdAt` datetime DEFAULT NULL,
		  `updatedAt` datetime DEFAULT NULL,
		  PRIMARY KEY (`treatment_id`)
		) ENGINE=MyISAM DEFAULT CHARSET=utf8;
  </statement>

  <!-- tb_treat -->
  <sql id="whereTreat">
    <dynamic prepend="WHERE">
      <isNotEmpty property="treatment_id" prepend="AND">
           treatment_id = #treatment_id#
      </isNotEmpty>
      <isNotEmpty property="emr_doctor_key" prepend="AND">
           emr_doctor_key = #emr_doctor_key#
      </isNotEmpty>
      <isNotEmpty property="patient_id" prepend="AND">
           patient_id = #patient_id#
      </isNotEmpty>
      <isNotEmpty property="room_id" prepend="AND">
           room_id = #room_id#
      </isNotEmpty>
      <isNotEmpty property="reg_user_id" prepend="AND">
           reg_user_id = #reg_user_id#
      </isNotEmpty>
      <isNotEmpty property="use_fg" prepend="AND">
           use_fg = #use_fg#
      </isNotEmpty>
      <isNotEmpty property="search_status" prepend="AND">
           status = #search_status#
      </isNotEmpty>
      <isNotEmpty property="today" prepend="AND">
      		createdAt <![CDATA[ > ]]> CURRENT_DATE()
      </isNotEmpty>
      <isEmpty property="search_status" prepend="AND">
      		trt.status != 'F'
      </isEmpty>
      <isNotEmpty property="s_user_nm" prepend="AND">
      		 if(#user_type# = 0, 'usr.name', 'ptnt.patient_nm') LIKE CONCAT('%', #s_user_nm#, '%')
      </isNotEmpty>
      <isNotEmpty property="s_user_nm" prepend="AND">
           if(#user_type# = 0, 'usr.name', 'ptnt.patient_nm') LIKE CONCAT('%', #s_user_nm#, '%')
      </isNotEmpty>
      <isNotEmpty property="search_text">
      		 <isEqual property="search_type" compareValue="R" prepend="AND">
						  room_id in (select room.room_id from tb_room room where room.room_nm LIKE CONCAT('%', #search_text#, '%') )
					 </isEqual>
					 <isEqual property="search_type" compareValue="D" prepend="AND">
						  doctor_id in (select usr.user_id from tb_user usr where usr.user_nm LIKE CONCAT('%', #search_text#, '%') and usr.role = "D" )
					 </isEqual>
					 <isEqual property="search_type" compareValue="P" prepend="AND">
						  patient_id in (select ptnt.patient_id from tb_patient ptnt where ptnt.patient_nm LIKE CONCAT('%', #search_text#, '%') )
					 </isEqual>
      </isNotEmpty>
    </dynamic>
  </sql>

  <select id="selectTreatCount" resultClass="int" parameterClass="hashmap">
			    SELECT count(1)
			      FROM tb_treatment trt
    <include refid="whereTreat"/>
  </select>

  <select id="selectTreatList" resultClass="hashmap" parameterClass="hashmap">
    SELECT trt.*
      FROM (
           SELECT trt.*
                 ,(select room.room_nm from tb_room room where trt.room_id = room.room_id) as room_nm
                 ,(select usr.user_nm from tb_user usr where usr.user_id = (select doctor_id from tb_doctor doctor where doctor.emr_doctor_key = trt.emr_doctor_key)) as doctor_nm
<!--                  ,(select ptnt.reg_no from tb_patient ptnt where trt.patient_id = ptnt.patient_id) as reg_no -->
                 ,CASE trt.status WHEN 'S' THEN "진료대기" WHEN 'T' THEN "진료중" WHEN 'F' THEN "진료완료" ELSE "보류" END as status_text
            FROM tb_treatment trt
        <include refid="whereTreat"/>
         ORDER BY trt.`rank` * 1 ASC, trt.updatedAt
           ) trt
  </select>
  
  <select id="selectTreatSingleList" resultClass="hashmap" parameterClass="hashmap">
    SELECT trt.*
    			,trt.treatment_id as treat_id
    			,trt.emr_doctor_key as view_id
    			<!-- ,(select count(*) from tb_machine_alert ma where ma.machine_id = #machineId# and ma.treat_id = trt.treatment_id) as alertCount -->
    			, -1 as alertCount
          ,(SELECT medical_kind FROM tb_doctor doctor WHERE doctor.emr_doctor_key = trt.emr_doctor_key) AS medical_kind
      FROM tb_treatment trt
     WHERE trt.emr_doctor_key = #doctorKey#
       AND status != 'H'
       AND status != 'F'
     ORDER BY trt.`rank` * 1 ASC, trt.updatedAt
  </select>
  
  <select id="selectTreatMultiList" resultClass="hashmap" parameterClass="hashmap">
    SELECT trt.*
    			 ,trt.treatment_id as treat_id
    			 ,trt.emr_doctor_key as view_id
    			 <!-- ,(select count(*) from tb_machine_alert ma where ma.machine_id = #machineId# and ma.treat_id = trt.treatment_id) as alertCount -->
    			 , -1 as alertCount
           ,(select room_nm from tb_room room where room.room_id = trt.room_id) as room_nm
      FROM tb_treatment trt
     WHERE status != 'H'
       and status != 'F'
     ORDER BY trt.`rank` * 1 ASC, trt.updatedAt
  </select>

  <select id="selectTreat" resultClass="hashmap" parameterClass="hashmap">
	     SELECT trt.*
             ,(select room.room_nm from tb_room room where trt.room_id = room.room_id) as room_nm
             ,(select usr.user_nm from tb_user usr where usr.user_id = (select doctor_id from tb_doctor doctor where doctor.emr_doctor_key = trt.emr_doctor_key)) as doctor_nm
	       FROM tb_treatment trt
	      WHERE treatment_id = #treatment_id#
  </select>
  
  <select id="selectTreatDupl" resultClass="hashmap" parameterClass="hashmap">
	     SELECT count(*) as isExist
	       FROM tb_treatment trt
    <dynamic prepend="WHERE">
      <isNotEmpty property="patient_id" prepend="AND">
           patient_id = #patient_id# and room_id = #room_id# and status != "F"
      </isNotEmpty>
    </dynamic>
  </select>

  <insert id="insertTreat" parameterClass="hashmap">
    INSERT INTO tb_treatment (
               patient_nm
               ,emr_doctor_key
               ,room_id
               ,reg_user_id
               ,status
               ,`rank`
               ,use_fg
               ,createdAt
               ,updatedAt
              ) values (
               #patient_nm#
               ,#emr_doctor_key#
               ,#room_id#
               ,#reg_user_id#
               ,#status#
               ,unix_timestamp(now()) * 1000
               ,'Y'
               ,now()
               ,now()
              )
  </insert>
 
  <update id="updateTreat" parameterClass="hashmap">
    UPDATE tb_treatment SET
           updatedAt = now()
    <isNotNull property="emr_doctor_key">
          ,emr_doctor_key = #emr_doctor_key#
    </isNotNull>
    <isNotNull property="patient_id">
          ,patient_id = #patient_id#
    </isNotNull>
    <isNotNull property="room_id">
          ,room_id = #room_id#
    </isNotNull>
    <isNotNull property="reg_user_id">
          ,reg_user_id = #reg_user_id#
    </isNotNull>
    <isNotNull property="rank_data">
    		  ,`rank` = #rank_data#
    </isNotNull>
    <isNotNull property="status">
    		  ,status = #status#
    </isNotNull>
    WHERE treatment_id = #treatment_id#
  </update>

  <delete id="deleteTreat" parameterClass="hashmap">
    UPDATE tb_treatment SET
           use_fg = 'N'
     WHERE treatment_id = #treatment_id#
  </delete>
  
  <sql id="whereRank">
    <dynamic prepend="WHERE">
      <isNotEmpty property="treatment_id" prepend="AND">
           trt.room_id = (select trtmt.room_id from tb_treatment trtmt where trtmt.treatment_id = #treatment_id#)
      </isNotEmpty>
      <isNotEmpty property="emr_doctor_key" prepend="AND">
           trt.emr_doctor_key = #emr_doctor_key#
      </isNotEmpty>
      AND trt.status != "F"
      AND trt.status != "T"
    </dynamic>
  </sql>
  
  <select id="selectRankingList" resultClass="hashmap" parameterClass="hashmap">
    SELECT trt.*,
           @rownum:=@rownum+1 as ranking
      FROM (
    SELECT trt.*
      FROM tb_treatment trt
     <include refid="whereRank"/>
  ORDER BY trt.`rank` * 1, trt.updatedAt
  ) trt,
  (SELECT @rownum:=0) num
  </select>


  <select id="selectRank" resultClass="hashmap" parameterClass="hashmap">
	     SELECT trt.`rank`
	            ,(select treat.`rank` from tb_treatment treat where treat.treatment_id = #treatment_id#) as pre_rank
	       FROM tb_treatment trt
        WHERE trt.treatment_id = #rank#
  </select>

</sqlMap>